#!/bin/bash
# Designed to be run from the crontab, for example:
# */5 * * * * ID=temp sg-client -d sg -g temp /sys/class/thermal/thermal_zone0/temp

sr=/var/sg # sg's root

if test -f /etc/machine-id
then
	# Use systemd's machine-id
	id=$(cat /etc/machine-id)
else
	# Or the first mac we find
	id=$(for i in /sys/class/net/*/address; do tr -d ":" < $i; done | head -n1)
fi

# Every graph needs a name
g="unnamed"

while getopts "g:d:i:" o
do
	case "$o" in
	(g) g="$OPTARG";; # graph name
	(d) d="$OPTARG";; # destination
	(i) id="$OPTARG";;# client id
	esac
done
shift $((OPTIND - 1))

# Crucial hierachy e.g. /var/sg/machine-id/temperature/022.csv, 022 is the day of the year
f="$sr/$id/$g/$(date +%j).csv"

# MUST be rooted by EPOCH time
if test -f "$1"
then
	m="$(date +%s) $(cat $1)"
else
	m="$(date +%s) $(cat /dev/stdin)"
fi

if test "$d" # we are ssh-ing if we have a destination
then

	# Try use an authenicated socket
	# See: https://github.com/kaihendry/Kai-s--HOME/blob/master/.xinitrc#L9
	SSH_ENV=$HOME/.ssh/environment
	test -f ${SSH_ENV} && . ${SSH_ENV} > /dev/null

	if ! echo $m | ssh $d "cat - >> $f"
	then
		ssh $d "mkdir -p $(dirname $f)"
		echo $m | ssh $d "cat - >> $f" &&
		echo "$m >> $d:$f"
	fi

else # we are local

	mkdir -p $(dirname $f)
	echo $m >> $f
	test "$?" -eq 0 &&
	echo "$m >> $f"

fi
